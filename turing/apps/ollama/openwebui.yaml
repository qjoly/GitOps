apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: openwebui
  namespace: argocd
spec:
  project: default
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
  destination:
    server: https://kubernetes.default.svc
    namespace: ollama
  source:
    repoURL: https://rubxkube.github.io/common-charts/
    chart: common
    targetRevision: 0.4.2
    helm:
      values: |
        name: "openwebui"
        service:
          enabled: true
          servicePort: 8080
          containerPort: 8080
          type: NodePort

        image:
          repository: ghcr.io/open-webui/open-webui
          tag: latest
          
        deployment:
          port: 8080
        variables:
          nonSecret:
            OLLAMA_BASE_URL: http://192.168.1.134:11434
            OAUTH_CLIENT_ID: <path:kv/openwebui#clientid>
            OAUTH_CLIENT_SECRET: <path:kv/openwebui#clientsecret>
            OPENID_PROVIDER_URL: <path:kv/openwebui#oidc_url>
            OAUTH_PROVIDER_NAME: authentik
            
        ingress:
            enabled: true
            hostName: "openwebui.<path:kv/cluster#domain>"
            ingressClassName: nginx
            tls:
              enabled: true
              secretName: "openwebui-tls"
            annotations:
              cert-manager.io/cluster-issuer: cloudflare
              external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
              external-dns.alpha.kubernetes.io/hostname: "openwebui.<path:kv/cluster#domain>"
              external-dns.alpha.kubernetes.io/target: "<path:kv/cloudflare#tunnelid>.cfargotunnel.com"



        configMap:
          enabled: false

        extraConfigMaps: []

        persistence:
          enabled: true
          volumes:
            - name: data
              storageClassName: ""
              size: 10Gi
              pvcClaim: ""
              containerMount: "/app/backend/data"
