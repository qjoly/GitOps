apiVersion: apps/v1
kind: Deployment
metadata:
  name: blog-en
  labels:
    app: blog-en
spec:
  replicas: 1
  selector:
    matchLabels:
      app: blog-en
  template:
    metadata:
      labels:
        app: blog-en
    spec:
      containers:
        - name: anubis
          image: ghcr.io/techarohq/anubis:latest
          ports:
            - containerPort: 8080
          imagePullPolicy: Always
          env:
            - name: "BIND"
              value: ":8080"
            - name: "DIFFICULTY"
              value: "4"
            - name: ED25519_PRIVATE_KEY_HEX
              valueFrom:
                secretKeyRef:
                  name: anubis-key
                  key: ED25519_PRIVATE_KEY_HEX
            - name: "METRICS_BIND"
              value: ":9090"
            - name: "SERVE_ROBOTS_TXT"
              value: "true"
            - name: "TARGET"
              value: "http://localhost:80"
            - name: "OG_PASSTHROUGH"
              value: "true"
            - name: "OG_EXPIRY_TIME"
              value: "24h"
            - name: POLICY_FNAME
              value: "/etc/policies/policy.json"
          volumeMounts:
            - name: policy-volume
              mountPath: /etc/policies
              readOnly: true
          resources:
            limits:
              cpu: 750m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault

        - name: blog
          image: ghcr.io/une-tasse-de-cafe/a-cup-of-coffee:nginx
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          resources:
            limits:
              cpu: 250m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: policy-volume
          configMap:
            name: blog-en-policy
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: blog-en-policy
data:
  policy.json: |
    ## Anubis has the ability to let you import snippets of configuration into the main
    ## configuration file. This allows you to break up your config into smaller parts
    ## that get logically assembled into one big file.
    ##
    ##
    ## Import paths can either be prefixed with (data) to import from the common/shared
    ## rules in the data folder in the Anubis source tree or will point to absolute/relative
    ## paths in your filesystem. If you don't have access to the Anubis source tree, check
    ## /usr/share/docs/anubis/data or in the tarball you extracted Anubis from.

    bots:
    - name: allow-rss-requests
      action: ALLOW
      expression:
        any:
          - 'path.startsWith("/index.xml")'
          - 'path.startsWith("/robots.txt")'
          - 'path.startsWith("/favicon")'
          - 'path.startsWith("/img/")'
          - 'path.startsWith("/sitemap.xml")'


    # Pathological bots to deny
    - # This correlates to data/bots/deny-pathological.yaml in the source tree
      # https://github.com/TecharoHQ/anubis/blob/main/data/bots/deny-pathological.yaml
      import: (data)/bots/_deny-pathological.yaml
    - import: (data)/bots/aggressive-brazilian-scrapers.yaml

    # Enforce https://github.com/ai-robots-txt/ai.robots.txt
    - import: (data)/bots/ai-robots-txt.yaml
    # Search engine crawlers to allow, defaults to:
    #   - Google (so they don't try to bypass Anubis)
    #   - Bing
    #   - DuckDuckGo
    #   - Qwant
    #   - The Internet Archive
    #   - Kagi
    #   - Marginalia
    #   - Mojeek
    - import: (data)/crawlers/_allow-good.yaml

    # Allow common "keeping the internet working" routes (well-known, favicon, robots.txt)
    - import: (data)/common/keep-internet-working.yaml

    # # Punish any bot with "bot" in the user-agent string
    # # This is known to have a high false-positive rate, use at your own risk
    # - name: generic-bot-catchall
    #   user_agent_regex: (?i:bot|crawler)
    #   action: CHALLENGE
    #   challenge:
    #     difficulty: 16  # impossible
    #     report_as: 4    # lie to the operator
    #     algorithm: slow # intentionally waste CPU cycles and time

    # Generic catchall rule
    - name: generic-browser
      user_agent_regex: >-
        Mozilla|Opera
      action: CHALLENGE
    - name: googlebot
      user_agent_regex: \+http\://www\.google\.com/bot\.html
      action: ALLOW
      # https://developers.google.com/static/search/apis/ipranges/googlebot.json
      remote_addresses: [
        "2001:4860:4801:10::/64",
        "2001:4860:4801:11::/64",
        "2001:4860:4801:12::/64",
        "2001:4860:4801:13::/64",
        "2001:4860:4801:14::/64",
        "2001:4860:4801:15::/64",
        "2001:4860:4801:16::/64",
        "2001:4860:4801:17::/64",
        "2001:4860:4801:18::/64",
        "2001:4860:4801:19::/64",
        "2001:4860:4801:1a::/64",
        "2001:4860:4801:1b::/64",
        "2001:4860:4801:1c::/64",
        "2001:4860:4801:1d::/64",
        "2001:4860:4801:1e::/64",
        "2001:4860:4801:1f::/64",
        "2001:4860:4801:20::/64",
        "2001:4860:4801:21::/64",
        "2001:4860:4801:22::/64",
        "2001:4860:4801:23::/64",
        "2001:4860:4801:24::/64",
        "2001:4860:4801:25::/64",
        "2001:4860:4801:26::/64",
        "2001:4860:4801:27::/64",
        "2001:4860:4801:28::/64",
        "2001:4860:4801:29::/64",
        "2001:4860:4801:2::/64",
        "2001:4860:4801:2a::/64",
        "2001:4860:4801:2b::/64",
        "2001:4860:4801:2c::/64",
        "2001:4860:4801:2d::/64",
        "2001:4860:4801:2e::/64",
        "2001:4860:4801:2f::/64",
        "2001:4860:4801:31::/64",
        "2001:4860:4801:32::/64",
        "2001:4860:4801:33::/64",
        "2001:4860:4801:34::/64",
        "2001:4860:4801:35::/64",
        "2001:4860:4801:36::/64",
        "2001:4860:4801:37::/64",
        "2001:4860:4801:38::/64",
        "2001:4860:4801:39::/64",
        "2001:4860:4801:3a::/64",
        "2001:4860:4801:3b::/64",
        "2001:4860:4801:3c::/64",
        "2001:4860:4801:3d::/64",
        "2001:4860:4801:3e::/64",
        "2001:4860:4801:40::/64",
        "2001:4860:4801:41::/64",
        "2001:4860:4801:42::/64",
        "2001:4860:4801:43::/64",
        "2001:4860:4801:44::/64",
        "2001:4860:4801:45::/64",
        "2001:4860:4801:46::/64",
        "2001:4860:4801:47::/64",
        "2001:4860:4801:48::/64",
        "2001:4860:4801:49::/64",
        "2001:4860:4801:4a::/64",
        "2001:4860:4801:4b::/64",
        "2001:4860:4801:4c::/64",
        "2001:4860:4801:50::/64",
        "2001:4860:4801:51::/64",
        "2001:4860:4801:52::/64",
        "2001:4860:4801:53::/64",
        "2001:4860:4801:54::/64",
        "2001:4860:4801:55::/64",
        "2001:4860:4801:56::/64",
        "2001:4860:4801:60::/64",
        "2001:4860:4801:61::/64",
        "2001:4860:4801:62::/64",
        "2001:4860:4801:63::/64",
        "2001:4860:4801:64::/64",
        "2001:4860:4801:65::/64",
        "2001:4860:4801:66::/64",
        "2001:4860:4801:67::/64",
        "2001:4860:4801:68::/64",
        "2001:4860:4801:69::/64",
        "2001:4860:4801:6a::/64",
        "2001:4860:4801:6b::/64",
        "2001:4860:4801:6c::/64",
        "2001:4860:4801:6d::/64",
        "2001:4860:4801:6e::/64",
        "2001:4860:4801:6f::/64",
        "2001:4860:4801:70::/64",
        "2001:4860:4801:71::/64",
        "2001:4860:4801:72::/64",
        "2001:4860:4801:73::/64",
        "2001:4860:4801:74::/64",
        "2001:4860:4801:75::/64",
        "2001:4860:4801:76::/64",
        "2001:4860:4801:77::/64",
        "2001:4860:4801:78::/64",
        "2001:4860:4801:79::/64",
        "2001:4860:4801:80::/64",
        "2001:4860:4801:81::/64",
        "2001:4860:4801:82::/64",
        "2001:4860:4801:83::/64",
        "2001:4860:4801:84::/64",
        "2001:4860:4801:85::/64",
        "2001:4860:4801:86::/64",
        "2001:4860:4801:87::/64",
        "2001:4860:4801:88::/64",
        "2001:4860:4801:90::/64",
        "2001:4860:4801:91::/64",
        "2001:4860:4801:92::/64",
        "2001:4860:4801:93::/64",
        "2001:4860:4801:94::/64",
        "2001:4860:4801:95::/64",
        "2001:4860:4801:96::/64",
        "2001:4860:4801:a0::/64",
        "2001:4860:4801:a1::/64",
        "2001:4860:4801:a2::/64",
        "2001:4860:4801:a3::/64",
        "2001:4860:4801:a4::/64",
        "2001:4860:4801:a5::/64",
        "2001:4860:4801:c::/64",
        "2001:4860:4801:f::/64",
        "192.178.5.0/27",
        "192.178.6.0/27",
        "192.178.6.128/27",
        "192.178.6.160/27",
        "192.178.6.192/27",
        "192.178.6.32/27",
        "192.178.6.64/27",
        "192.178.6.96/27",
        "34.100.182.96/28",
        "34.101.50.144/28",
        "34.118.254.0/28",
        "34.118.66.0/28",
        "34.126.178.96/28",
        "34.146.150.144/28",
        "34.147.110.144/28",
        "34.151.74.144/28",
        "34.152.50.64/28",
        "34.154.114.144/28",
        "34.155.98.32/28",
        "34.165.18.176/28",
        "34.175.160.64/28",
        "34.176.130.16/28",
        "34.22.85.0/27",
        "34.64.82.64/28",
        "34.65.242.112/28",
        "34.80.50.80/28",
        "34.88.194.0/28",
        "34.89.10.80/28",
        "34.89.198.80/28",
        "34.96.162.48/28",
        "35.247.243.240/28",
        "66.249.64.0/27",
        "66.249.64.128/27",
        "66.249.64.160/27",
        "66.249.64.224/27",
        "66.249.64.32/27",
        "66.249.64.64/27",
        "66.249.64.96/27",
        "66.249.65.0/27",
        "66.249.65.128/27",
        "66.249.65.160/27",
        "66.249.65.192/27",
        "66.249.65.224/27",
        "66.249.65.32/27",
        "66.249.65.64/27",
        "66.249.65.96/27",
        "66.249.66.0/27",
        "66.249.66.128/27",
        "66.249.66.160/27",
        "66.249.66.192/27",
        "66.249.66.224/27",
        "66.249.66.32/27",
        "66.249.66.64/27",
        "66.249.66.96/27",
        "66.249.68.0/27",
        "66.249.68.128/27",
        "66.249.68.32/27",
        "66.249.68.64/27",
        "66.249.68.96/27",
        "66.249.69.0/27",
        "66.249.69.128/27",
        "66.249.69.160/27",
        "66.249.69.192/27",
        "66.249.69.224/27",
        "66.249.69.32/27",
        "66.249.69.64/27",
        "66.249.69.96/27",
        "66.249.70.0/27",
        "66.249.70.128/27",
        "66.249.70.160/27",
        "66.249.70.192/27",
        "66.249.70.224/27",
        "66.249.70.32/27",
        "66.249.70.64/27",
        "66.249.70.96/27",
        "66.249.71.0/27",
        "66.249.71.128/27",
        "66.249.71.160/27",
        "66.249.71.192/27",
        "66.249.71.224/27",
        "66.249.71.32/27",
        "66.249.71.64/27",
        "66.249.71.96/27",
        "66.249.72.0/27",
        "66.249.72.128/27",
        "66.249.72.160/27",
        "66.249.72.192/27",
        "66.249.72.224/27",
        "66.249.72.32/27",
        "66.249.72.64/27",
        "66.249.72.96/27",
        "66.249.73.0/27",
        "66.249.73.128/27",
        "66.249.73.160/27",
        "66.249.73.192/27",
        "66.249.73.224/27",
        "66.249.73.32/27",
        "66.249.73.64/27",
        "66.249.73.96/27",
        "66.249.74.0/27",
        "66.249.74.128/27",
        "66.249.74.160/27",
        "66.249.74.192/27",
        "66.249.74.32/27",
        "66.249.74.64/27",
        "66.249.74.96/27",
        "66.249.75.0/27",
        "66.249.75.128/27",
        "66.249.75.160/27",
        "66.249.75.192/27",
        "66.249.75.224/27",
        "66.249.75.32/27",
        "66.249.75.64/27",
        "66.249.75.96/27",
        "66.249.76.0/27",
        "66.249.76.128/27",
        "66.249.76.160/27",
        "66.249.76.192/27",
        "66.249.76.224/27",
        "66.249.76.32/27",
        "66.249.76.64/27",
        "66.249.76.96/27",
        "66.249.77.0/27",
        "66.249.77.128/27",
        "66.249.77.160/27",
        "66.249.77.192/27",
        "66.249.77.224/27",
        "66.249.77.32/27",
        "66.249.77.64/27",
        "66.249.77.96/27",
        "66.249.78.0/27",
        "66.249.78.32/27",
        "66.249.79.0/27",
        "66.249.79.128/27",
        "66.249.79.160/27",
        "66.249.79.192/27",
        "66.249.79.224/27",
        "66.249.79.32/27",
        "66.249.79.64/27",
        "66.249.79.96/27"
      ]
    dnsbl: false

    # By default, send HTTP 200 back to clients that either get issued a challenge
    # or a denial. This seems weird, but this is load-bearing due to the fact that
    # the most aggressive scraper bots seem to really, really, want an HTTP 200 and
    # will stop sending requests once they get it.
    status_codes:
      CHALLENGE: 200
      DENY: 200 # This is the default, so you can omit this if you want
---
apiVersion: v1
kind: Service
metadata:
  name: blog-en
  labels:
    app: blog-en
spec:
  selector:
    app: blog-en
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: blog-en
  annotations:
    cert-manager.io/cluster-issuer: cloudflare
    traefik.ingress.kubernetes.io/router.middlewares: traefik-redirect@kubernetescrd
spec:
  rules:
    - host: a-cup-of.coffee
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: blog-en
                port:
                  number: 80
  tls:
    - hosts:
        - a-cup-of.coffee
      secretName: blog-en
